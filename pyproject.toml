[project]
name = "kratio"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
license = "MIT"
license-file = "LICENSE"
authors = [
    { name = "Juan Sebastian PeÃ±a", email = "jspenaq@unal.edu.co" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.12"
dependencies = [
    "loguru>=0.7.3",
    "pandas>=2.3.0",
    "pip>=25.2",
    "seaborn>=0.13.2",
    "spacy>=3.8.7",
    "tabulate>=0.9.0",
    "watchdog>=3.0.0",
]
# CLI entry point
[project.scripts]
kratio = "kratio.cli.cli:main"

[dependency-groups]
dev = [
    "coverage>=7.8.2",
    "mypy>=1.16.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.11.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


# Ruff configuration

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # Pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "Q",  # flake8-quotes
    "S",  # flake8-bandit
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
    "TC",  # flake8-type-checking
    "TD",  # flake8-todos
    "C4",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "ANN",  # flake8-annotations
    "SIM",  # flake8-simplify
    "RET",  # flake8-return
    "COM",  # flake8-commas
    "ICN",  # flake8-import-conventions
    "TID",  # flake8-tidy-imports
    "PTH",  # flake8-use-pathlib
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "ANN001", "ANN201", "ANN202", "E402", "E501", "E711"]


# Coverage configuration

[tool.coverage.run]
branch = true
source = [
    "kratio",  # Include the kratio package
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
omit = [
    "tests/*",  # Exclude all test files
    "*/__init__.py",  # Exclude __init__.py files
    "*/migrations/*",  # Exclude Django migrations
    "*/settings.py",  # Exclude Django settings
    "*/wsgi.py",  # Exclude WSGI files
    "*/asgi.py",  # Exclude ASGI files
]

show_missing = true

[tool.coverage.html]
directory = "coverage_html_report"